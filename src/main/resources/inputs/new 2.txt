package year2015.day_3b;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

public class Main {
    public static void main(String[] args) throws IOException {
        ArrayList<Coordinate> coordinates = new ArrayList<>();
        Coordinate currentCoordinate = new Coordinate(0, 0);
        coordinates.add(currentCoordinate);

        try (BufferedReader br = new BufferedReader(new FileReader("src/main/resources/inputs/day_03_2015.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {

                for (int i = 0; i < line.length(); i++) {
                    char direction = line.charAt(i);
                    switch (direction) {
                        case '<':
                            currentCoordinate = new Coordinate(currentCoordinate.getX() - 1, currentCoordinate.getY());
                            break;
                        case '>':
                            currentCoordinate = new Coordinate(currentCoordinate.getX() + 1, currentCoordinate.getY());
                            break;
                        case '^':
                            currentCoordinate = new Coordinate(currentCoordinate.getX(), currentCoordinate.getY() + 1);
                            break;
                        case 'v':
                            currentCoordinate = new Coordinate(currentCoordinate.getX(), currentCoordinate.getY() - 1);
                            break;
                        default:
                            System.err.println("Invalid direction: " + direction);
                            continue;
                    }
                    boolean coordinateExist = false;
                    for (Coordinate coordinate : coordinates) {
                        if (coordinate.getX() == currentCoordinate.getX() && coordinate.getY() == currentCoordinate.getY()) {
                            coordinateExist = true;
                            break;
                        }
                    }
                    if (!coordinateExist) {
                        coordinates.add(currentCoordinate);
                    }
                }
            }
        }


        // Print out number of adress visited at least once
        System.out.println("il y a " + coordinates.size() + " adresses diff√©rentes");

    }
    public static ArrayList adress (String moves) {
        for (int i = 0; i < moves.length(); i++) {
            char direction = moves.charAt(i);
            switch (direction) {
                case '<':
                    currentCoordinate = new Coordinate(currentCoordinate.getX() - 1, currentCoordinate.getY());
                    break;
                case '>':
                    currentCoordinate = new Coordinate(currentCoordinate.getX() + 1, currentCoordinate.getY());
                    break;
                case '^':
                    currentCoordinate = new Coordinate(currentCoordinate.getX(), currentCoordinate.getY() + 1);
                    break;
                case 'v':
                    currentCoordinate = new Coordinate(currentCoordinate.getX(), currentCoordinate.getY() - 1);
                    break;
                default:
                    System.err.println("Invalid direction: " + direction);
                    continue;
            }
            boolean coordinateExist = false;
            for (Coordinate coordinate : coordinates) {
                if (coordinate.getX() == currentCoordinate.getX() && coordinate.getY() == currentCoordinate.getY()) {
                    coordinateExist = true;
                    break;
                }
            }
            if (!coordinateExist) {
                coordinates.add(currentCoordinate);
            }
        }
    }
        
    }
}



